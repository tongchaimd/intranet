extends ../layout.pug


block title
	- const title = isNew ? 'Adding Business Card' : 'Updating Business Card'
	title= buildTitle(title)
block hero
	.hero.is-dark
		.hero-body
			h1.title= title
block content
	include ./partials/form.pug
	+form(paths.businessCards())
	- const action = isNew ? paths.businessCards() : `${paths.businessCards(card)}?_method=PATCH`
	form(action=action, method="post")
		.tabs.is-boxed(style="margin-bottom: 0; padding-bottom: 0;" data-group='language')
			ul
				li(data-target=languageList[0]).is-active
					a= languageList[0]
				each language in languageList.slice(1)
					li(data-target=language)
						a= language
		.box
			mixin fieldInput(path, language)
				if language
					input.input(type="text" name=`${language}-${path}` value=(card ? card[path][language] : ''))
				else
					input.input(type="text" name=path value=(card ? card[path] : ''))
			mixin multiLangFields(language, hidden)
				div.group-language(class=`target-${language} ${(hidden ? 'is-hidden' : '')}`)
					.field.columns
						.column(style="padding-bottom: 0")
							label.label Full Name
							.control
								+fieldInput('fullName', language)
						.column(style="padding-bottom: 0")
							label.label Position
							.control
								+fieldInput('position', language)
					.field
						label.label Company's Name
						.control
							+fieldInput('companyName', language)
					.field
						label.label Company's Location
						.control
							+fieldInput('companyLocation', language)
			+multiLangFields(languageList[0])
			each language in languageList.slice(1)
				+multiLangFields(language, true)
		.field.columns
			.column(style="padding-bottom: 0")
				label.label Telephone No.
				.control
					+fieldInput('phone')
			.column(style="padding-bottom: 0")
				label.label Mobile No.
				.control
					+fieldInput('mobile')
			.column(style="padding-bottom: 0")
				label.label Fax No.
				.control
					+fieldInput('fax')
		.field.columns
			.column(style="padding-bottom: 0")
				label.label Email
				.control
					+fieldInput('email')
			.column(style="padding-bottom: 0")
				label.label Website
				.control
					+fieldInput('website')
		.field
			label.label Tags
			.field.is-grouped.is-grouped-multiline#tags-container
				mixin tag(value)
					.control
						.tags.has-addons
							span.tag.is-info.is-medium= value
							a(onclick="this.parentNode.parentNode.parentNode.removeChild(this.parentNode.parentNode)").tag.is-delete.is-medium
							input(type="hidden" name="tagList" value=value)
				if card
					each tag in card.tagList
						+tag(tag)
			.field.has-addons
				.control
					input.input#input-tag(type="text" autocomplete="off")
				.control
					a.button#add-tag
						span.icon
							i.fas.fa-plus
			label.label.is-size-7 popular tags:
			.field.is-grouped.is-grouped-multiline
				each tagObj in popularTags
					.control
						.tags.has-addons
							span.tag.is-dark= tagObj._id
							span.tag= tagObj.count
		.field
			.control
				input.button.is-primary(type="submit")
	script.
		const addTag = document.querySelector('#add-tag');
		addTag.addEventListener('click', () => {
			const inputTag = document.querySelector('#input-tag');
			const value = inputTag.value;
			const control = document.createElement('div');
			control.className = 'control';
			control.innerHTML =
				`<div class="tags has-addons">
					<span class="tag is-info has-addons is-medium">
						${value}
					</span>
					<a onclick="this.parentNode.parentNode.parentNode.removeChild(this.parentNode.parentNode)" class="tag is-delete is-medium" />
					<input type="hidden" name="tagList" value="${value}"
				</div>`
			const container = document.querySelector('#tags-container');
			container.appendChild(control);
			inputTag.value = '';
		});
		window.addEventListener('keydown', function(e) {
			if(e.keyIdentifier == 'U+000A' || e.keyIdentifier == 'Enter' || e.keyCode == 13) {
				if(e.target.nodeName == 'INPUT' && e.target.type == 'text') {
					e.preventDefault();
					if(e.target.id == 'input-tag') {
						document.querySelector('#add-tag').dispatchEvent(new Event('click'));
					}
					return false;
				}
			}
		}, true);
