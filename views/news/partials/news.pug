h1.title= news.title
if news.sourceUrl
	p.subtitle#preview-source source: 
		a(href=news.sourceUrl)= news.sourceUrl
else
	p.is-hidden#preview-source source: #[a]
p.subtitle.has-text-weight-bold posted by: 
	span#poster= news.poster
	if createdAt
		span.duration-ago.has-text-weight-semibold.is-italic.is-size-6.has-text-grey #{helpers.moment(createdAt).fromNow()} (#{helpers.moment(createdAt).format('LLLL')})

- const imageSourceArray =  news.getImageSourceArray()
if imageSourceArray && imageSourceArray.length
	.news-image-container.container.is-flex-desktop.has-text-centered(style="flex-wrap: wrap; align-items: center;")
		img.image(src=imageSourceArray[0])
		if imageSourceArray.length > 1
			img.image(src=imageSourceArray[1])
		if imageSourceArray.length > 2
			a#get-images(href="#" data-target=paths.newsImages(news) + '?start=2' style="flex: 1 100%") #{imageSourceArray.length - 2} more image(s)
.content.
	!{news.markedupContent}

script.
	const button = document.querySelector('#get-images');
	button.addEventListener('click', event => {
		event.stopPropagation();
		event.preventDefault();
		fetch(new URL(button.dataset.target, window.location.href), {
			credentials: 'same-origin',
		})
			.then(res => {
				return res.json();
			})
			.then(imageSourceArray => {
				const container = document.querySelector('.news-image-container');
				imageSourceArray.forEach(imageSource => {
					const imageElem = document.createElement('img');
					imageElem.className = 'image';
					imageElem.src = imageSource;
					container.appendChild(imageElem);
				})
				container.removeChild(button);
			})
			.catch(e => {
				console.log(e);
			});
	});
